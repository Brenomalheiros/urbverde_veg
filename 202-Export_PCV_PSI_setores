/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-47.899194022257866, -22.004819239751814],
          [-47.899194022257866, -22.005953223482052],
          [-47.89704825504595, -22.005953223482052],
          [-47.89704825504595, -22.004819239751814]]], null, false),
    irs = ee.Image("projects/urbverde/assets/Mancha_Urbana-IRS500");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var setores = ee.FeatureCollection('projects/ee-urb-verde/assets/recortes_2025/SP_setores_universo')
var pcv_s2 = ee.ImageCollection('projects/urbverde/assets/remote-sensing/PCV-S2')


var lista_anos = [2016,2017,2018,2019,2020,2021,2022,2023,2024]
var output_version = 'v3' //calculada em cima dos setores de 2020

setores = setores.filter(ee.Filter.eq('CD_SIT','1'))
                 .merge(setores.filter(ee.Filter.eq('CD_SIT','2')))
                 .merge(setores.filter(ee.Filter.eq('CD_SIT','3')))
                 //.filterBounds(geometry)


// ==== MLME MÃ‰DIO ====

var indexes = function(ano){
  
   var veg = ee.ImageCollection('projects/urbverde/assets/remote-sensing/PCV-S2')
    .filter(ee.Filter.eq('year',ano))
    .mosaic()
    .select(['veg_1'],['pcv']) // usar _1 para manter o controle do modelo utilizado
   
   var asf = ee.ImageCollection('projects/urbverde/assets/remote-sensing/PSI-S2')
    .filter(ee.Filter.eq('year',ano))
    .filter(ee.Filter.eq('version',2))
    .mosaic()
    .select(['p_edif'],['psi']) //percentual de superficie impermeavel
   
   var image = veg.addBands(asf);
   print(image)
   
  //print('setores',setores)
  var mean_index = image.reduceRegions({
    collection:setores, 
    reducer:ee.Reducer.mean(),//.setOutputs(['veg_1_mean', 'asf_2_mean']), 
    scale:10
  })
  

//print('mean_Index',mean_index)

//=====Exporta o mosaico como asset=======

var assetID = 'Setores_pcv_psi-' + ano + '-' + output_version 
Export.table.toAsset({
  collection: ee.FeatureCollection(mean_index), 
  description:assetID, 
  assetId:'projects/ee-urb-verde/assets/v_2025/' + assetID,
}) 

  return mean_index
}



var index_table = lista_anos.map(indexes)

